{
    "openapi": "3.0.0",
    "info": {
        "title": "Swagger with Laravel",
        "version": "1.0.0"
    },
    "paths": {
        "/api/collectedPois/getAll": {
            "get": {
                "tags": [
                    "CompletedPois"
                ],
                "summary": "Restituisce tutti i POI raccolti da un giocatore",
                "operationId": "f21ef1bac4adae1eccaa8d417d52249f",
                "parameters": [
                    {
                        "name": "playerId",
                        "in": "query",
                        "description": "ID del giocatore",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lista dei POI raccolti",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The level field is required."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Errore di validazione"
                    }
                }
            }
        },
        "/api/collectedPois/create": {
            "post": {
                "tags": [
                    "CompletedPois"
                ],
                "summary": "Crea o aggiorna un POI raccolto da un giocatore",
                "operationId": "e2702a5e5f48221b3953fd64f08d3342",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "playerId",
                                    "latitude",
                                    "longitude"
                                ],
                                "properties": {
                                    "playerId": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "latitude": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 45.4642
                                    },
                                    "longitude": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 9.19
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "POI raccolto creato o aggiornato",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The level field is required."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Errore di validazione"
                    }
                }
            }
        },
        "/api/completedQuests/getAll": {
            "get": {
                "tags": [
                    "CompletedQuests"
                ],
                "summary": "Restituisce tutte le missioni completate da un giocatore",
                "operationId": "65d3ce36bda81dfd01218710058bcfb1",
                "parameters": [
                    {
                        "name": "playerId",
                        "in": "query",
                        "description": "ID del giocatore",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lista delle missioni completate",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The level field is required."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Errore di validazione"
                    }
                }
            }
        },
        "/api/completedQuests/create": {
            "post": {
                "tags": [
                    "CompletedQuests"
                ],
                "summary": "Crea una nuova missione completata per un giocatore",
                "operationId": "fa6b19089addf22c660253f4da6d3a77",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "playerId",
                                    "name"
                                ],
                                "properties": {
                                    "playerId": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "name": {
                                        "type": "string",
                                        "example": "Missione del Drago"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Missione completata creata",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The level field is required."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Errore di validazione"
                    }
                }
            }
        },
        "/api/equippableItems": {
            "get": {
                "tags": [
                    "EquippableItems"
                ],
                "summary": "Get all equippable items",
                "description": "Returns a list of all equippable items",
                "operationId": "getAllEquippableItems",
                "responses": {
                    "200": {
                        "description": "A list of equippable items",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                },
                                "example": "equippableItems list stringify"
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "EquippableItems"
                ],
                "summary": "Create a random equippable item",
                "description": "Creates a random equippable item based on the given level and ownerId",
                "operationId": "createRandomItem",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "level",
                                    "ownerId"
                                ],
                                "properties": {
                                    "level": {
                                        "type": "integer",
                                        "example": 5
                                    },
                                    "ownerId": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Item created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "rarityId": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "blueprintId": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "ownerId": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "randomFactor": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 0.5
                                        },
                                        "damage": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 10.5
                                        },
                                        "health": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 20.5
                                        },
                                        "getRarity": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Rare"
                                                },
                                                "hexColor": {
                                                    "type": "string",
                                                    "example": "#FF0000"
                                                },
                                                "multiplier": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 1.5
                                                },
                                                "levelRequiredToDrop": {
                                                    "type": "integer",
                                                    "example": 1
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "getBlueprint": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Sword"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "A sharp sword"
                                                },
                                                "type": {
                                                    "type": "string",
                                                    "example": "weapon"
                                                },
                                                "baseDamage": {
                                                    "type": "integer",
                                                    "example": 10
                                                },
                                                "baseHealth": {
                                                    "type": "integer",
                                                    "example": 20
                                                },
                                                "requiredLevel": {
                                                    "type": "integer",
                                                    "example": 1
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "No available rarity or blueprint for the given level"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/equippableItems/{id}": {
            "get": {
                "tags": [
                    "EquippableItems"
                ],
                "summary": "Get equippable item by ID",
                "description": "Returns a single equippable item by its ID",
                "operationId": "getEquippableItemById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the equippable item",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Equippable item details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                },
                                "example": "equippableItem details stringify"
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "EquippableItems"
                ],
                "summary": "Update an equippable item",
                "description": "Updates an existing equippable item",
                "operationId": "updateEquippableItem",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the equippable item to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "ownerId"
                                ],
                                "properties": {
                                    "ownerId": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Equippable item updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                },
                                "example": "equippableItem updated stringify"
                            }
                        }
                    }
                }
            }
        },
        "/api/inventory": {
            "get": {
                "tags": [
                    "EquippableItems"
                ],
                "summary": "Recupera l'inventario del giocatore",
                "description": "Ritorna gli oggetti equipaggiabili di un giocatore filtrati per tipo (weapon, armor, rune).",
                "operationId": "getInventory",
                "parameters": [
                    {
                        "name": "ownerId",
                        "in": "query",
                        "description": "ID del giocatore (owner)",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 42
                        }
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Tipo di oggetto equipaggiabile",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "enum": [
                                1,
                                2,
                                3
                            ],
                            "example": "1 = weapon, 2 = armor, 3 = rune"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lista di oggetti equipaggiabili",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                },
                                "example": "Lista di oggetti equipaggiabili in formato JSON"
                            }
                        }
                    },
                    "422": {
                        "description": "Errore di validazione"
                    }
                }
            }
        },
        "/api/league/canGetReward": {
            "get": {
                "tags": [
                    "League"
                ],
                "summary": "Verifica se il giocatore può riscattare il premio settimanale",
                "description": "Controlla se il giocatore ha già ricevuto un premio questa settimana o se è idoneo per riceverlo.",
                "operationId": "canGetReward",
                "parameters": [
                    {
                        "name": "playerId",
                        "in": "query",
                        "description": "ID del giocatore",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 42
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Il giocatore può ricevere il premio",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Player can have the reward"
                                        },
                                        "position": {
                                            "type": "integer",
                                            "example": 5
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "413": {
                        "description": "Il giocatore ha già ricevuto il premio questa settimana",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Reward already claimed."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "414": {
                        "description": "Il giocatore non può ricevere il premio (prima richiesta registrata)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Player cannot have the reward"
                                        },
                                        "position": {
                                            "type": "integer",
                                            "example": 20
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Errore di validazione",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "playerId": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The selected playerId is invalid."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/league/getReward": {
            "post": {
                "tags": [
                    "League"
                ],
                "summary": "Riscatta il premio settimanale del giocatore",
                "description": "Ritorna un oggetto equipaggiabile generato in base alla posizione settimanale del giocatore.",
                "operationId": "getReward",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "playerId"
                                ],
                                "properties": {
                                    "playerId": {
                                        "type": "integer",
                                        "example": 42
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Premio riscattato con successo",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Reward claimed successfully."
                                        },
                                        "reward": {
                                            "description": "Oggetto equipaggiabile generato",
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 123
                                                },
                                                "rarity_id": {
                                                    "type": "integer",
                                                    "example": 2
                                                },
                                                "blueprint_id": {
                                                    "type": "integer",
                                                    "example": 5
                                                },
                                                "player_id": {
                                                    "type": "integer",
                                                    "example": 42
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Il giocatore non è stato trovato nella lega",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Player not found in league."
                                        },
                                        "reward": {
                                            "type": "string",
                                            "example": null
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Errore di validazione",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "playerId": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The selected playerId is invalid."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/player": {
            "post": {
                "tags": [
                    "Player"
                ],
                "summary": "Create a new player",
                "description": "Creates a new player with a name",
                "operationId": "createPlayer",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "playerName"
                                ],
                                "properties": {
                                    "playerName": {
                                        "description": "Player's name",
                                        "type": "string",
                                        "example": "John Doe"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Player created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Player created successfully"
                                        },
                                        "player": {
                                            "type": "string",
                                            "example": "stringified player object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/player/all": {
            "get": {
                "tags": [
                    "Player"
                ],
                "summary": "Get all players",
                "description": "Returns a list of all players",
                "operationId": "getAllPlayers",
                "responses": {
                    "200": {
                        "description": "A list of players",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "name": {
                                                "type": "string",
                                                "example": "John Doe"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/player/{id}": {
            "get": {
                "tags": [
                    "Player"
                ],
                "summary": "Get a player by ID",
                "description": "Returns a player by ID",
                "operationId": "getPlayerById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the player to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Player found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                },
                                "example": "Player stringified object"
                            }
                        }
                    },
                    "404": {
                        "description": "Player not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Player"
                ],
                "summary": "Update a player",
                "description": "Aggiorna le informazioni di un giocatore esistente, come nome, livello, esperienza raccolta, vittorie e battaglie totali.",
                "operationId": "2bee51cc75979ae669cc1b18558f0986",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID del giocatore da aggiornare",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "Nuovo nome del giocatore",
                                        "type": "string",
                                        "example": "john doe"
                                    },
                                    "level": {
                                        "description": "Nuovo livello del giocatore",
                                        "type": "integer",
                                        "example": 10
                                    },
                                    "experienceCollected": {
                                        "description": "Esperienza raccolta dal giocatore",
                                        "type": "integer",
                                        "example": 1000
                                    },
                                    "nWonBattles": {
                                        "description": "Numero di battaglie vinte dal giocatore",
                                        "type": "integer",
                                        "example": 50
                                    },
                                    "nBattles": {
                                        "description": "Numero totale di battaglie del giocatore",
                                        "type": "integer",
                                        "example": 75
                                    },
                                    "helmetId": {
                                        "description": "ID del casco equipaggiato dal giocatore",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "runeId": {
                                        "description": "ID della runa equipaggiata dal giocatore",
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "weaponId": {
                                        "description": "ID dell'arma equipaggiata dal giocatore",
                                        "type": "integer",
                                        "example": 3
                                    },
                                    "currentHealth": {
                                        "description": "Salute attuale del giocatore",
                                        "type": "integer",
                                        "example": 10
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Giocatore aggiornato con successo",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Player updated successfully"
                                        },
                                        "player": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 22
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "john doe"
                                                },
                                                "level": {
                                                    "type": "integer",
                                                    "example": 10
                                                },
                                                "experienceCollected": {
                                                    "type": "integer",
                                                    "example": 1000
                                                },
                                                "nWonBattles": {
                                                    "type": "integer",
                                                    "example": 50
                                                },
                                                "nBattles": {
                                                    "type": "integer",
                                                    "example": 75
                                                },
                                                "currentHealth": {
                                                    "type": "integer",
                                                    "example": 10
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Giocatore non trovato",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Player not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Player"
                ],
                "summary": "Delete a player by ID",
                "description": "Deletes a player by ID",
                "operationId": "deletePlayerById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the player to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Player deleted successfully"
                    },
                    "404": {
                        "description": "Player not found"
                    }
                }
            }
        },
        "/api/league": {
            "get": {
                "tags": [
                    "Player"
                ],
                "summary": "Get player ranking and league list",
                "description": "Restituisce la lista ordinata dei giocatori per win rate e la posizione del player specificato.",
                "operationId": "getLeagueList",
                "parameters": [
                    {
                        "name": "playerId",
                        "in": "query",
                        "description": "ID del giocatore di cui calcolare la posizione",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 42
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Classifica restituita con successo",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "players": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Mario"
                                                    },
                                                    "nBattles": {
                                                        "type": "integer",
                                                        "example": 50
                                                    },
                                                    "nWonBattles": {
                                                        "type": "integer",
                                                        "example": 30
                                                    },
                                                    "win_rate": {
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 0.6
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "position": {
                                            "type": "integer",
                                            "example": 1
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Errore di validazione",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "playerId": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The selected playerId is invalid."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/rarities": {
            "get": {
                "tags": [
                    "Rarities"
                ],
                "summary": "Get all rarities",
                "description": "Returns a list of all rarities",
                "operationId": "getAllRarities",
                "responses": {
                    "200": {
                        "description": "A list of rarities",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                },
                                "example": "rarities list stringify"
                            }
                        }
                    }
                }
            }
        },
        "/api/usableItems/getUsableItemsOfUser": {
            "get": {
                "tags": [
                    "UsableItems"
                ],
                "summary": "Ottieni gli oggetti utilizzabili di un giocatore",
                "description": "Recupera gli oggetti utilizzabili per un giocatore specifico dato l'ID del proprietario.",
                "operationId": "getUsableItemsOfUser",
                "parameters": [
                    {
                        "name": "ownerId",
                        "in": "query",
                        "description": "ID del giocatore di cui ottenere gli oggetti utilizzabili.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lista degli oggetti utilizzabili trovati per il giocatore.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer"
                                            },
                                            "name": {
                                                "type": "string"
                                            },
                                            "type": {
                                                "type": "string"
                                            },
                                            "quantity": {
                                                "type": "integer"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Errore nella richiesta: `ownerId` è richiesto.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "ownerId is required"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Giocatore non trovato con l'ID fornito.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Player not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/usableItems/createRandomUsableItem": {
            "post": {
                "tags": [
                    "UsableItems"
                ],
                "summary": "Crea un oggetto utilizzabile casuale",
                "description": "Genera un oggetto utilizzabile casuale in base al livello specificato. Se viene fornito ownerId, assegna l'oggetto al giocatore. Altrimenti, l'oggetto non sarà assegnato a nessuno.",
                "operationId": "createRandomUsableItem",
                "requestBody": {
                    "description": "Dati per creare un oggetto utilizzabile casuale",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "level"
                                ],
                                "properties": {
                                    "level": {
                                        "description": "Livello del giocatore per determinare la rarità dell'oggetto",
                                        "type": "integer"
                                    },
                                    "ownerId": {
                                        "description": "ID del giocatore a cui assegnare l'oggetto (opzionale)",
                                        "type": "integer",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Oggetto utilizzabile casuale creato con successo",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Random usable item created successfully"
                                        },
                                        "usableItem": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer"
                                                },
                                                "name": {
                                                    "type": "string"
                                                },
                                                "description": {
                                                    "type": "string"
                                                },
                                                "healthRecovery": {
                                                    "type": "integer"
                                                },
                                                "imagePath": {
                                                    "type": "string"
                                                },
                                                "rarityId": {
                                                    "type": "integer"
                                                },
                                                "ownerId": {
                                                    "type": "integer",
                                                    "nullable": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Errore di validazione: campo richiesto mancante o non valido",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The level field is required."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Giocatore non trovato o nessun oggetto utilizzabile disponibile per la rarità specificata.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Player not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/usableItems/{id}": {
            "get": {
                "tags": [
                    "UsableItems"
                ],
                "summary": "Get a usable item by ID",
                "description": "Retrieve a specific usable item by its ID.",
                "operationId": "getUsableItemById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the usable item to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Usable item found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Usable item found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Usable item not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Usable item not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "UsableItems"
                ],
                "summary": "Update a usable item",
                "description": "Update the details of a specific usable item by its ID.",
                "operationId": "updateUsableItem",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the usable item to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Details to update the usable item",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "ownerId": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Usable item updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Usable item updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Usable item not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Usable item not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "UsableItems"
                ],
                "summary": "Elimina un oggetto utilizzabile",
                "description": "Elimina un oggetto utilizzabile specificato dall'ID.",
                "operationId": "deleteUsableItem",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID dell'oggetto utilizzabile da eliminare",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Oggetto utilizzabile eliminato con successo",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Usable item deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Oggetto utilizzabile non trovato",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Usable item not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/user": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Create a new user",
                "description": "Creates a new user with an email and password",
                "operationId": "createUser",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password",
                                    "playerName"
                                ],
                                "properties": {
                                    "playerName": {
                                        "description": "User's player name",
                                        "type": "string",
                                        "example": "Player123"
                                    },
                                    "email": {
                                        "description": "User's email",
                                        "type": "string",
                                        "example": "user@example.com"
                                    },
                                    "password": {
                                        "description": "User's password",
                                        "type": "string",
                                        "example": "Password123!"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User created successfully"
                                        },
                                        "user": {
                                            "type": "string"
                                        },
                                        "player": {
                                            "type": "string"
                                        },
                                        "token": {
                                            "type": "string",
                                            "example": "csrf_token_value"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Validation failed"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/user/all": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get all users",
                "description": "Returns a list of all users",
                "operationId": "getAllUsers",
                "responses": {
                    "200": {
                        "description": "A list of users",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 1
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/user/{id}": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get user by ID",
                "description": "Returns a user by ID",
                "operationId": "getUserById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the user to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                },
                                "example": "User string"
                            }
                        }
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "User"
                ],
                "summary": "Delete a user",
                "description": "Deletes a user by ID",
                "operationId": "deleteUser",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the user to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User deleted successfully"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/api/user/logout": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Logout user",
                "description": "Logs out the user and invalidates the session",
                "operationId": "d52b7004aad9cc11ac927b616ad9c1f2",
                "responses": {
                    "200": {
                        "description": "User logged out successfully"
                    }
                }
            }
        },
        "/api/user/login": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Login User",
                "description": "Autentica un utente esistente utilizzando email e password. Restituisce un token di autenticazione se la login ha successo.",
                "operationId": "9f6f4aca790a5229fb638e798623c6e0",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "description": "Email dell'utente",
                                        "type": "string",
                                        "example": "user@example.com"
                                    },
                                    "password": {
                                        "description": "Password dell'utente",
                                        "type": "string",
                                        "example": "securePassword123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login effettuato con successo",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User logged in successfully"
                                        },
                                        "token": {
                                            "description": "Token di autenticazione",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Credenziali non valide",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid credentials"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/user/checkToken": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Verifica il token dell'utente",
                "description": "Controlla se il token fornito corrisponde a quello salvato per l'utente specificato.",
                "operationId": "a877109731814d9d09d534c9e8322ab3",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "token"
                                ],
                                "properties": {
                                    "email": {
                                        "description": "Email dell'utente",
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    },
                                    "token": {
                                        "description": "Token da verificare",
                                        "type": "string",
                                        "example": "abc123xyz"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Token valido",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "logged in"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Token non valido",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Utente non trovato",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Dati non validi",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "responses": {
            "200": {
                "description": "A list of usable items",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "string"
                        },
                        "example": "usableItems list stringify"
                    }
                }
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "CompletedPois",
            "description": "CompletedPois"
        },
        {
            "name": "CompletedQuests",
            "description": "CompletedQuests"
        },
        {
            "name": "EquippableItems",
            "description": "EquippableItems"
        },
        {
            "name": "League",
            "description": "League"
        },
        {
            "name": "Player",
            "description": "Player"
        },
        {
            "name": "Rarities",
            "description": "Rarities"
        },
        {
            "name": "UsableItems",
            "description": "UsableItems"
        },
        {
            "name": "User",
            "description": "User"
        }
    ]
}